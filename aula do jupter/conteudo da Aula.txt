Verificando tipos de dados numericos

type(variavel)

CRISNDO UMA VARIAVEL TIPO STRING.

SEM QUE DECLARAMOS UMA STRING DEVE ESTAR ENTRE PARENTESES E ASPAS SIMPLES OU DUDLAS.

EX: ("OLÁ MUNDO!") OU ('OLÁ MUNDO'!)

----------------------------------------------
Podemos delarar varias linhas colocando aspas tripla (""") e quebre com esclamação(!).

----------------------------------------------

Podemos concatenar ou seja juntar duas palavras usando o sinal de mais entre duas palavras exemplo, qando usamos exp. soma + uma da adção.

Fica soma da adção

Podemos replicar  o valor da string (ex h*3)  que o resltado é "hahaha".

Retornando o I-esimo de uma string que é a letra da posição digitada.

nome = "curso"
nome = [0] //Lembrando que  a posição deve ser cmado sempre entre corchete.

Retornando a sring que vai do indice i até j-1 {i:j}

Parque possomamos retornar uma quantidade de posições devemos fazer ex: nome[0:4] esta chamada busca as primeira quatro letra do nome declarado.

-------------------------------------------------------------

Tipos boleano

O tipo boleano é VERDADEIRO OU FALSO / TRU  / FALSE

OBS; atenção com a indetação do codigo

-----------------------------------------------------------

Varriaveis e entrada de dados a função ptint mostra  a saida de dados digitados.

%s retorna o valor da (variavel) mais podemos usar para qualquer tipos de dados.

Ex: nome = input ("Digite um nome: ")
print("mensagem %s" % variavel ( se for do tipo str)
print("%s digite a mensagem final" % variavel).

---------------------------------------------------
Condicional 

if onde é formado por bloco que só executa se for verdadeira.

caso não seja verdadeira ele não executa.

else - senão

vem sepre abaixo o if caso ele não execute o primeiro bloco if  e a primeira condição naõfor verdadeira excuta o bloco else.

Para que sejá impresso ou seja execute é necessario que o codigo esteja indetado dentro do mesmo bloco.

ex: if x > y;

	print ("true")

else
	print("flase")

exponeciação ex y ** 2 pega o valor da vareavel e multiplica pelo valor declarado.

Obs: Todos os valores de variavel em 0 tende a ser bool  ou seja ele se torna falso.

---------------------------------------------------------
Operador "OR" para que o resultado seja verdadeiro um dos valores tem uqe ser verdadeiro or = ou ou seja ele verificar se uma das condição é verdadeiro se for ele executa.

O Operador and só executa se as duas condição for verdadeira.

SUBSTRING - Para verificar se uma letra faz parte de uma palavra decla if  " letra que vai verificar palavra" in "palavra a ser verificada:"

Podemos verificar se uma palavra faz parte de uma lista ex: if python in [ 'paython', 'curso',];
	


----------

Estruturas anianhada

Podemos ter varias condições em cascata ou seja um "if" dentro de outro "if"

A condição elif ela executa cda condição "linha do codigo" diferente do else que pula para o proximo ploco, neste caso não é necessario indentar.

---------------------------------------------------

Repetição.

È ultilizda a parte de um progama varias vezes ou seja sem a necessidade de rescrever o progrma varias vezes, mais isso depende de uma condição.
Podemos trabalhar com as palavars FOR WHILE para trabalhar com repetição.

FOR - Devemos sempre declarar um valor  x depois declaramos o que queremos que o programa execute.

ex: for x in ("Manga", "Maçã") neste caso ele vai imprimr uma lista com dois nomes.

While- Devemos declarar uma variavel onde recebe um valor normalmente 0 ex: i = 0

depois criar  o laço para que le repita até qua a condição termine ou seja verdadeira mais para isso devemos criar um incremento para que o laço se repita de é a propria vareiavel mai 1 ex: i =1 + 1  ou i+=1.


Ex: i = 0

while i < 5:
  print(i)
    i = 1 + 1
      ou 
    i+=1
-----------------------------------------------------------

CONTADOR - Neste caso é ultilzado para verificar quantas vezer queremos que um certo programa conte uma determindo conteudo declarado e podemos definir a contagem ou seja, podemos definir que ele conte de 2 em 2..

Ex: contador = 1
while contador < 5:
 print("Olá mundo!")
 contador = contador + 1 - isso siguinifica que vai ser impresso o nome Olá mundo 5 vezes.
contador = contador + 2 neste caso ele pula de 2 em dois uma vez que definimos que o contador vai somar ele memso e pular 2.

----------------------------------------------------------------------------------
Acomulador - Neste caso definimos um input ou teja um campo para que o usuario digite o valor e definimos quantas vezes queremos que ele comule para assim mostrar o resultado, tambem devemos zerar o contador  na varriavel soma para que não tenha erro na execução do programa ex: soma = 0 neste caso pode garantir que a variavel soma começa do seu inicio 0 assim podemos calcular o total de uma soma. .

EX: n=1 
soma = 0
while < 10:
   x = int(input("Digite o %d número: %n))
   soma = soma + x
   n = n + 1
print("soma: %d" %soma)




